{"version":3,"sources":["components/Cards/Cards.module.css","App.module.css","components/Cards/Cards.js","api/index.js","components/Chart/Chart.js","components/CountryPicker/CountryPicker.js","App.js","index.js","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","xs","md","component","Card","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","dynamicURL","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleChangeCountry","countryData","setCountryData","countriesAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","index","key","App","state","fetchedData","setState","this","imgcontainer","image","src","alt","textcontainer","headertext","subtext","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2627eac9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1l3Hy\",\"card\":\"Cards_card__1HHzj\",\"infected\":\"Cards_infected__2LLxG\",\"recovered\":\"Cards_recovered__ez7oe\",\"deaths\":\"Cards_deaths__dw7To\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__WxNVc\",\"image\":\"App_image__2VKYO\",\"imgcontainer\":\"App_imgcontainer__RTU4d\",\"textcontainer\":\"App_textcontainer__2goVb\",\"headertext\":\"App_headertext__2VFcx\",\"subtext\":\"App_subtext__2MK0T\"};","import React from 'react';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport styles from './Cards.module.css';\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n    //console.log('FC-Cards---------------');\r\n    //console.log(confirmed);\r\n    if (!confirmed) {\r\n        return 'Loading...';\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify='center'>\r\n                <Grid\r\n                    item\r\n                    xs={12}\r\n                    md={3}\r\n                    component={Card}\r\n                    className={cx(styles.card, styles.infected)}\r\n                >\r\n                    <CardContent>\r\n                        <Typography color='textSecondary' gutterBottom>\r\n                            Infected\r\n                        </Typography>\r\n                        <Typography variant='h5'>\r\n                            <CountUp\r\n                                start={0}\r\n                                end={confirmed.value}\r\n                                duration={2.5}\r\n                                separator=','\r\n                            />\r\n                        </Typography>\r\n                        <Typography color='textSecondary'>\r\n                            {new Date(lastUpdate).toDateString()}\r\n                        </Typography>\r\n                        <Typography variant='body2'>\r\n                            Number of Active COVID-19 Cases\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n\r\n                <Grid\r\n                    item\r\n                    xs={12}\r\n                    md={3}\r\n                    component={Card}\r\n                    className={cx(styles.card, styles.recovered)}\r\n                >\r\n                    <CardContent>\r\n                        <Typography color='textSecondary' gutterBottom>\r\n                            Recovered\r\n                        </Typography>\r\n                        <Typography variant='h5'>\r\n                            <CountUp\r\n                                start={0}\r\n                                end={recovered.value}\r\n                                duration={2.5}\r\n                                separator=','\r\n                            />\r\n                        </Typography>\r\n                        <Typography color='textSecondary'>\r\n                            {new Date(lastUpdate).toDateString()}\r\n                        </Typography>\r\n                        <Typography variant='body2'>\r\n                            Number of COVID-19 Recoveries\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n\r\n                <Grid\r\n                    item\r\n                    xs={12}\r\n                    md={3}\r\n                    component={Card}\r\n                    className={cx(styles.card, styles.deaths)}\r\n                >\r\n                    <CardContent>\r\n                        <Typography color='textSecondary' gutterBottom>\r\n                            Deaths\r\n                        </Typography>\r\n                        <Typography variant='h5'>\r\n                            <CountUp\r\n                                start={0}\r\n                                end={deaths.value}\r\n                                duration={2.5}\r\n                                separator=','\r\n                            />\r\n                        </Typography>\r\n                        <Typography color='textSecondary'>\r\n                            {new Date(lastUpdate).toDateString()}\r\n                        </Typography>\r\n                        <Typography variant='body2'>\r\n                            Number of COVID-19 Deaths\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cards;\r\n","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n    let dynamicURL = url;\r\n\r\n    if (country) {\r\n        dynamicURL = `${url}/countries/${country}`;\r\n    }\r\n\r\n    try {\r\n        const {\r\n            data: { confirmed, recovered, deaths, lastUpdate },\r\n        } = await axios.get(dynamicURL);\r\n\r\n        return { confirmed, recovered, deaths, lastUpdate };\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`);\r\n\r\n        const modifiedData = data.map((dailyData) => {\r\n            return {\r\n                confirmed: dailyData.confirmed.total,\r\n                deaths: dailyData.deaths.total,\r\n                date: dailyData.reportDate,\r\n            };\r\n        });\r\n\r\n        return modifiedData;\r\n    } catch (error) {}\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const {\r\n            data: { countries },\r\n        } = await axios.get(`${url}/countries`);\r\n\r\n        return countries.map((country) => country.name);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport { fetchDailyData } from '../../api';\r\nimport styles from './Chart.module.css';\r\n\r\nfunction Chart({ data: { confirmed, recovered, deaths }, country }) {\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        };\r\n\r\n        fetchAPI();\r\n    }, []);\r\n\r\n    const lineChart = dailyData.length ? (\r\n        <Line\r\n            data={{\r\n                labels: dailyData.map(({ date }) => date),\r\n                datasets: [\r\n                    {\r\n                        data: dailyData.map(({ confirmed }) => confirmed),\r\n                        label: 'Infected',\r\n                        borderColor: '#3333ff',\r\n                        fill: 'true',\r\n                    },\r\n                    {\r\n                        data: dailyData.map(({ deaths }) => deaths),\r\n                        label: 'Deaths',\r\n                        borderColor: 'red',\r\n                        backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n                        fill: 'true',\r\n                    },\r\n                ],\r\n            }}\r\n        />\r\n    ) : null;\r\n\r\n    //Takes JSX, not a function\r\n    const barChart = confirmed ? (\r\n        <Bar\r\n            data={{\r\n                labels: ['Infected', 'Recovered', 'Deaths'],\r\n                datasets: [\r\n                    {\r\n                        label: 'People',\r\n                        backgroundColor: [\r\n                            'rgba(0,0,255,0.5)',\r\n                            'rgba(0,255,0,0.5)',\r\n                            'rgba(255,0,0,0.5)',\r\n                        ],\r\n                        data: [confirmed.value, recovered.value, deaths.value],\r\n                    },\r\n                ],\r\n            }}\r\n            options={{\r\n                legend: { display: false },\r\n                title: {\r\n                    display: true,\r\n                    text: `Current state in ${country}`,\r\n                },\r\n            }}\r\n        />\r\n    ) : null;\r\n\r\n    return (\r\n        <div className={styles.container}>{country ? barChart : lineChart}</div>\r\n    );\r\n}\r\n\r\nexport default Chart;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport styles from './CountryPicker.module.css';\r\nimport { fetchCountries } from '../../api';\r\n\r\nconst CountryPicker = ({ handleChangeCountry }) => {\r\n    const [countryData, setCountryData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const countriesAPI = async () => {\r\n            setCountryData(await fetchCountries());\r\n        };\r\n\r\n        countriesAPI();\r\n    }, [setCountryData]);\r\n\r\n    return (\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect\r\n                defaultValue=''\r\n                onChange={(e) => {\r\n                    handleChangeCountry(e.target.value);\r\n                }}\r\n            >\r\n                <option value=''>-Global-</option>\r\n                {countryData.map((country, index) => (\r\n                    <option key={index} value={country}>\r\n                        {country}\r\n                    </option>\r\n                ))}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    );\r\n};\r\n\r\nexport default CountryPicker;\r\n","import React from 'react';\r\n\r\nimport { Cards, Chart, CountryPicker } from './components';\r\nimport styles from './App.module.css';\r\nimport { fetchData } from './api';\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        data: {},\r\n        country: '',\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const fetchedData = await fetchData();\r\n        this.setState({ data: fetchedData });\r\n    }\r\n\r\n    handleChangeCountry = async (country) => {\r\n        const fetchedData = await fetchData(country);\r\n        console.log(fetchedData);\r\n        //set state\r\n        this.setState({ data: fetchedData, country: country });\r\n    };\r\n\r\n    render() {\r\n        const { data, country } = this.state;\r\n\r\n        return (\r\n            <div className={styles.container}>\r\n                <div className={styles.imgcontainer}>\r\n                    <img\r\n                        className={styles.image}\r\n                        src='https://www.pon-cat.com/application/files/7915/8400/2602/home-banner.jpg'\r\n                        alt='virus1'\r\n                    />\r\n                    <div className={styles.textcontainer}>\r\n                        <h1 className={styles.headertext}>COVID-19 Tracker</h1>\r\n                        <p className={styles.subtext}>\r\n                            Based on covid19.mathdro.id/api\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <Cards data={data} />\r\n                <CountryPicker handleChangeCountry={this.handleChangeCountry} />\r\n                <Chart data={data} country={country} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__YhHet\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__rpbIB\"};"],"sourceRoot":""}